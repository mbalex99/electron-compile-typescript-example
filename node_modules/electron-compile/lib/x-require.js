'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _create = require('babel-runtime/core-js/object/create');

var _create2 = _interopRequireDefault(_create);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _url = require('url');

var _url2 = _interopRequireDefault(_url);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function requireModule(href) {
  var filePath = href;

  if (filePath.match(/^file:/i)) {
    var theUrl = _url2.default.parse(filePath);
    filePath = decodeURIComponent(theUrl.pathname);

    if (process.platform === 'win32') {
      filePath = filePath.slice(1);
    }
  }

  // NB: We don't do any path canonicalization here because we rely on
  // InlineHtmlCompiler to have already converted any relative paths that
  // were used with x-require into absolute paths.
  require(filePath);
}

/**
 * @private
 */

exports.default = function () {
  if (process.type !== 'renderer' || !window || !window.document) return null;

  var proto = _lodash2.default.extend((0, _create2.default)(HTMLElement.prototype), {
    createdCallback: function createdCallback() {
      var href = this.getAttribute('src');
      if (href && href.length > 0) {
        requireModule(href);
      }
    },
    attributeChangedCallback: function attributeChangedCallback(attrName, oldVal, newVal) {
      if (attrName !== 'src') return;
      requireModule(newVal);
    }
  });

  return document.registerElement('x-require', { prototype: proto });
}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy94LXJlcXVpcmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7OztBQUVBLFNBQVMsYUFBVCxDQUF1QixJQUF2QixFQUE2QjtBQUMzQixNQUFJLFdBQVcsSUFBZjs7QUFFQSxNQUFJLFNBQVMsS0FBVCxDQUFlLFNBQWYsQ0FBSixFQUErQjtBQUM3QixRQUFJLFNBQVMsY0FBSSxLQUFKLENBQVUsUUFBVixDQUFiO0FBQ0EsZUFBVyxtQkFBbUIsT0FBTyxRQUExQixDQUFYOztBQUVBLFFBQUksUUFBUSxRQUFSLEtBQXFCLE9BQXpCLEVBQWtDO0FBQ2hDLGlCQUFXLFNBQVMsS0FBVCxDQUFlLENBQWYsQ0FBWDtBQUNEO0FBQ0Y7Ozs7O0FBS0QsVUFBUSxRQUFSO0FBQ0Q7Ozs7OztrQkFLZSxZQUFNO0FBQ3BCLE1BQUksUUFBUSxJQUFSLEtBQWlCLFVBQWpCLElBQStCLENBQUMsTUFBaEMsSUFBMEMsQ0FBQyxPQUFPLFFBQXRELEVBQWdFLE9BQU8sSUFBUDs7QUFFaEUsTUFBSSxRQUFRLGlCQUFFLE1BQUYsQ0FBUyxzQkFBYyxZQUFZLFNBQTFCLENBQVQsRUFBK0M7QUFDekQscUJBQWlCLDJCQUFXO0FBQzFCLFVBQUksT0FBTyxLQUFLLFlBQUwsQ0FBa0IsS0FBbEIsQ0FBWDtBQUNBLFVBQUksUUFBUSxLQUFLLE1BQUwsR0FBYyxDQUExQixFQUE2QjtBQUMzQixzQkFBYyxJQUFkO0FBQ0Q7QUFDRixLQU53RDtBQU96RCw4QkFBMEIsa0NBQVMsUUFBVCxFQUFtQixNQUFuQixFQUEyQixNQUEzQixFQUFtQztBQUMzRCxVQUFJLGFBQWEsS0FBakIsRUFBd0I7QUFDeEIsb0JBQWMsTUFBZDtBQUNEO0FBVndELEdBQS9DLENBQVo7O0FBYUEsU0FBTyxTQUFTLGVBQVQsQ0FBeUIsV0FBekIsRUFBc0MsRUFBRSxXQUFXLEtBQWIsRUFBdEMsQ0FBUDtBQUNELENBakJjLEUiLCJmaWxlIjoieC1yZXF1aXJlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcclxuaW1wb3J0IHVybCBmcm9tICd1cmwnO1xyXG5cclxuZnVuY3Rpb24gcmVxdWlyZU1vZHVsZShocmVmKSB7XHJcbiAgbGV0IGZpbGVQYXRoID0gaHJlZjtcclxuICBcclxuICBpZiAoZmlsZVBhdGgubWF0Y2goL15maWxlOi9pKSkge1xyXG4gICAgbGV0IHRoZVVybCA9IHVybC5wYXJzZShmaWxlUGF0aCk7XHJcbiAgICBmaWxlUGF0aCA9IGRlY29kZVVSSUNvbXBvbmVudCh0aGVVcmwucGF0aG5hbWUpO1xyXG5cclxuICAgIGlmIChwcm9jZXNzLnBsYXRmb3JtID09PSAnd2luMzInKSB7XHJcbiAgICAgIGZpbGVQYXRoID0gZmlsZVBhdGguc2xpY2UoMSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIC8vIE5COiBXZSBkb24ndCBkbyBhbnkgcGF0aCBjYW5vbmljYWxpemF0aW9uIGhlcmUgYmVjYXVzZSB3ZSByZWx5IG9uXHJcbiAgLy8gSW5saW5lSHRtbENvbXBpbGVyIHRvIGhhdmUgYWxyZWFkeSBjb252ZXJ0ZWQgYW55IHJlbGF0aXZlIHBhdGhzIHRoYXRcclxuICAvLyB3ZXJlIHVzZWQgd2l0aCB4LXJlcXVpcmUgaW50byBhYnNvbHV0ZSBwYXRocy5cclxuICByZXF1aXJlKGZpbGVQYXRoKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEBwcml2YXRlXHJcbiAqLyBcclxuZXhwb3J0IGRlZmF1bHQgKCgpID0+IHtcclxuICBpZiAocHJvY2Vzcy50eXBlICE9PSAncmVuZGVyZXInIHx8ICF3aW5kb3cgfHwgIXdpbmRvdy5kb2N1bWVudCkgcmV0dXJuIG51bGw7XHJcbiAgXHJcbiAgbGV0IHByb3RvID0gXy5leHRlbmQoT2JqZWN0LmNyZWF0ZShIVE1MRWxlbWVudC5wcm90b3R5cGUpLCB7XHJcbiAgICBjcmVhdGVkQ2FsbGJhY2s6IGZ1bmN0aW9uKCkge1xyXG4gICAgICBsZXQgaHJlZiA9IHRoaXMuZ2V0QXR0cmlidXRlKCdzcmMnKTtcclxuICAgICAgaWYgKGhyZWYgJiYgaHJlZi5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgcmVxdWlyZU1vZHVsZShocmVmKTtcclxuICAgICAgfVxyXG4gICAgfSwgXHJcbiAgICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2s6IGZ1bmN0aW9uKGF0dHJOYW1lLCBvbGRWYWwsIG5ld1ZhbCkge1xyXG4gICAgICBpZiAoYXR0ck5hbWUgIT09ICdzcmMnKSByZXR1cm47XHJcbiAgICAgIHJlcXVpcmVNb2R1bGUobmV3VmFsKTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIGRvY3VtZW50LnJlZ2lzdGVyRWxlbWVudCgneC1yZXF1aXJlJywgeyBwcm90b3R5cGU6IHByb3RvIH0pO1xyXG59KSgpO1xyXG4iXX0=